 Scheme occupies a unique niche. A research niche and an educational
niche. It is not a language. Not R6RS, not R5RS, not R4Rs. It is an
idea. Or a collection of ideas. It is a framework. It is a way of
thinking. It is a mindset. All of this is embodied in an ever growing
family of languages or dialects, not a single language. It is a
virus. It is the ultimate programming-language virus. 
    The cat is already out of the bag and there is no way to get it back
in. Once someone gets the mindset, they can implement their own
implementation, which is often a slightly different dialect. This has
happened hundreds if not thousands of times over. (Probably hundreds
of thousands or more if one counts all the people doing homework for
Scheme courses.) 
    This happens for Scheme in a way that it doesn't for any other
language. Scheme has also served as a testbed for innovated language
ideas more than any other language, either by fueling such innovation
or by adopting such innovation. I'm talking about the most major
innovations of all of computer science. Things like: scoping,
nondeterminism, parallelism, lazy evaluation, unification, constraint
processing, stochastic computation, quantum computation, automatic
differentiation, genetic programming, types, automated reasoning,
... just to name a few.  
   -- from the R6RS Ballot of Jeffrey Mark Siskind, author of Stalin
      and current (unofficial) maintainer of Scheme->C
