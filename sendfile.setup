(use posix)

(define madvise-test #<<CODE
#include <stdlib.h>
#include "sys/mman.h"
int main (){
  char *buff;
  madvise(buff,0,MADV_WILLNEED);
  return 0;
}
CODE
)

(define posix-fadvise-test #<<CODE
#define _XOPEN_SOURCE 600
#include <stdlib.h>
#include <fcntl.h>
int main(){
  int fake_fd = 0;
  posix_fadvise(fake_fd,0,0,POSIX_FADV_SEQUENTIAL);
  return posix_fadvise(fake_fd,0,0,POSIX_FADV_NOREUSE);
}
CODE
)

(define sendfile-bsd-test #<<CODE
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <sys/uio.h>
int main(){
  int src,dst;
  off_t offset,res;
  return sendfile(src,dst,offset,0,NULL,&res,0);
}
CODE
)

(define sendfile-macos-test #<<CODE
#include <stdlib.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <sys/uio.h>
int main(){
  int src,dst;
  off_t offset,res;
  return sendfile(src,dst,offset,&res,0,0);
}
CODE
)

(define sendfile-sun-test #<<CODE
#include <stdlib.h>
#include <sys/sendfile.h>
int main(){
  int dst;
  sendfilevec_t fvec;
  size_t written;
  return sendfile(dst,&fvec,1,&written);
}
CODE
)

(define sendfile-linux-test #<<CODE
#include <stdlib.h>
#include <sys/sendfile.h>
int main(){
  int in,out;
  off_t offset;
  return sendfile(in,out,&offset,0);
}
CODE
)

(define mmap-test #<<CODE
#include <stdlib.h>
#include <sys/mman.h>
int main(){
   int src;
   return mmap(0, 100, PROT_READ | PROT_WRITE, MAP_SHARED,src, 0);
}
CODE
)


(define madvise? (try-compile madvise-test compile-only: #f))
(define posix-fadvise? (try-compile posix-fadvise-test compile-only: #f))
(define mmap? (try-compile mmap-test compile-only: #f))
(define sendfile?
          (cond-expand
          (linux
           (try-compile sendfile-linux-test compile-only: #f))
          ((or netbsd openbsd freebsd)
           (try-compile sendfile-bsd-test compile-only: #f))
          (macosx
           (try-compile sendfile-macos-test compile-only: #f))
          (sun
           (try-compile sendfile-sun-test compile-only: #f))
          (else #f)))

;; Compatibility with older chickens
(if (version>=? "4.6" (chicken-version))
    (copy-file (make-pathname "backward-compatibility" "copy-port.scm")
               (make-pathname (current-directory) "backward-compatibility.scm"))
    (with-output-to-file "backward-compatibility.scm" (cut display "")))

(let ((features '()))
  (when madvise?
    (set! features (cons '-D (cons 'madvise features))))
  (when posix-fadvise?
    (set! features (cons '-D (cons 'posix-fadvise features))))
  (when mmap?
    (set! features (cons '-D (cons 'mmap features))))
  (when sendfile?
    (set! features (cons '-D (cons 'sendfile features))))
  (compile -s -O2 -d0 ,@features sendfile.scm -j sendfile)
  (compile -s -O2 -d0 sendfile.import.scm)
  (compile -c -O2 -d0 ,@features sendfile.scm  -unit sendfile -o sendfile-static.o)
  (install-extension
    'sendfile
    '("sendfile.so" "sendfile.import.so" "sendfile-static.o")
    '((version "1.7.31")
     (static "sendfile-static.o")
     (documentation "sendfile.html"))))
